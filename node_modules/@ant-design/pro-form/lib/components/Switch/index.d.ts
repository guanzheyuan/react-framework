import React from 'react';
import type { SwitchProps } from 'antd';
import type { ProFormItemProps } from '../../interface';
export declare type ProFormSwitchProps = ProFormItemProps<SwitchProps> & {
    checkedChildren?: SwitchProps['checkedChildren'];
    unCheckedChildren?: SwitchProps['unCheckedChildren'];
};
declare const _default: React.ComponentClass<Omit<{
    fieldProps?: (import("../../interface").FieldProps & SwitchProps) | undefined;
    placeholder?: string | string[] | undefined;
    secondary?: boolean | undefined;
    allowClear?: boolean | undefined;
    disabled?: boolean | undefined;
    width?: number | "sm" | "md" | "xl" | "xs" | "lg" | undefined;
    proFieldProps?: {
        light?: boolean | undefined;
        label?: React.ReactNode;
        mode?: "read" | undefined;
    } | undefined;
} & import("antd").FormItemProps<any> & {
    checkedChildren?: React.ReactNode;
    unCheckedChildren?: React.ReactNode;
} & import("../../BaseForm/createField").ExtendsProps, "proFieldProps">, any> | React.FunctionComponent<Omit<{
    fieldProps?: (import("../../interface").FieldProps & SwitchProps) | undefined;
    placeholder?: string | string[] | undefined;
    secondary?: boolean | undefined;
    allowClear?: boolean | undefined;
    disabled?: boolean | undefined;
    width?: number | "sm" | "md" | "xl" | "xs" | "lg" | undefined;
    proFieldProps?: {
        light?: boolean | undefined;
        label?: React.ReactNode;
        mode?: "read" | undefined;
    } | undefined;
} & import("antd").FormItemProps<any> & {
    checkedChildren?: React.ReactNode;
    unCheckedChildren?: React.ReactNode;
} & import("../../BaseForm/createField").ExtendsProps, "proFieldProps">>;
export default _default;
